//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.21 at 02:19:07 PM PDT 
//


package generated;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.NormalizedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="BinocularType" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="binoculars"/>
 *               &lt;enumeration value="monoculars"/>
 *               &lt;enumeration value="laser-rangefinders"/>
 *               &lt;enumeration value="spotting-scopes"/>
 *               &lt;enumeration value="night-vision"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="FocusType" type="{}StringNotNull" minOccurs="0"/>
 *         &lt;element name="PrismType" type="{}StringNotNull" minOccurs="0"/>
 *         &lt;element name="ObjectiveLensDiameter" type="{}LengthDimension" minOccurs="0"/>
 *         &lt;element name="ExitPupilDiameter" type="{}LengthDimension" minOccurs="0"/>
 *         &lt;element name="FieldOfView" type="{}LengthDimension" minOccurs="0"/>
 *         &lt;element name="ApparentAngleOfView" type="{}DegreeDimension" minOccurs="0"/>
 *         &lt;element name="RealAngleOfView" type="{}DegreeDimension" minOccurs="0"/>
 *         &lt;element name="EyeRelief" type="{}LengthDimension" minOccurs="0"/>
 *         &lt;element name="DiopterAdjustmentRange" type="{}StringNotNull" minOccurs="0"/>
 *         &lt;element name="Coating" type="{}StringNotNull" minOccurs="0"/>
 *         &lt;element name="EyepieceLensConstruction" type="{}StringNotNull" minOccurs="0"/>
 *         &lt;element name="ObjectiveLensConstruction" type="{}StringNotNull" minOccurs="0"/>
 *         &lt;element name="TripodReady" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *         &lt;element name="Features" maxOccurs="9" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="compact"/>
 *               &lt;enumeration value="full-size"/>
 *               &lt;enumeration value="image-stabilizing"/>
 *               &lt;enumeration value="waterproof"/>
 *               &lt;enumeration value="fogproof"/>
 *               &lt;enumeration value="zoom"/>
 *               &lt;enumeration value="uv-protection"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="Magnification" type="{}ZoomDimension" minOccurs="0"/>
 *         &lt;element name="SpecificUses" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="tabletop"/>
 *               &lt;enumeration value="travel"/>
 *               &lt;enumeration value="hiking-and-outdoors"/>
 *               &lt;enumeration value="hunting-and-shooting"/>
 *               &lt;enumeration value="sports"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "binocularType",
    "focusType",
    "prismType",
    "objectiveLensDiameter",
    "exitPupilDiameter",
    "fieldOfView",
    "apparentAngleOfView",
    "realAngleOfView",
    "eyeRelief",
    "diopterAdjustmentRange",
    "coating",
    "eyepieceLensConstruction",
    "objectiveLensConstruction",
    "tripodReady",
    "features",
    "magnification",
    "specificUses"
})
@XmlRootElement(name = "Binocular")
public class Binocular {

    @XmlElement(name = "BinocularType")
    protected String binocularType;
    @XmlElement(name = "FocusType")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String focusType;
    @XmlElement(name = "PrismType")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String prismType;
    @XmlElement(name = "ObjectiveLensDiameter")
    protected LengthDimension objectiveLensDiameter;
    @XmlElement(name = "ExitPupilDiameter")
    protected LengthDimension exitPupilDiameter;
    @XmlElement(name = "FieldOfView")
    protected LengthDimension fieldOfView;
    @XmlElement(name = "ApparentAngleOfView")
    protected DegreeDimension apparentAngleOfView;
    @XmlElement(name = "RealAngleOfView")
    protected DegreeDimension realAngleOfView;
    @XmlElement(name = "EyeRelief")
    protected LengthDimension eyeRelief;
    @XmlElement(name = "DiopterAdjustmentRange")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String diopterAdjustmentRange;
    @XmlElement(name = "Coating")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String coating;
    @XmlElement(name = "EyepieceLensConstruction")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String eyepieceLensConstruction;
    @XmlElement(name = "ObjectiveLensConstruction")
    @XmlJavaTypeAdapter(NormalizedStringAdapter.class)
    protected String objectiveLensConstruction;
    @XmlElement(name = "TripodReady")
    protected Boolean tripodReady;
    @XmlElement(name = "Features")
    protected List<String> features;
    @XmlElement(name = "Magnification")
    protected ZoomDimension magnification;
    @XmlElement(name = "SpecificUses")
    protected String specificUses;

    /**
     * Gets the value of the binocularType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBinocularType() {
        return binocularType;
    }

    /**
     * Sets the value of the binocularType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBinocularType(String value) {
        this.binocularType = value;
    }

    /**
     * Gets the value of the focusType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFocusType() {
        return focusType;
    }

    /**
     * Sets the value of the focusType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFocusType(String value) {
        this.focusType = value;
    }

    /**
     * Gets the value of the prismType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrismType() {
        return prismType;
    }

    /**
     * Sets the value of the prismType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrismType(String value) {
        this.prismType = value;
    }

    /**
     * Gets the value of the objectiveLensDiameter property.
     * 
     * @return
     *     possible object is
     *     {@link LengthDimension }
     *     
     */
    public LengthDimension getObjectiveLensDiameter() {
        return objectiveLensDiameter;
    }

    /**
     * Sets the value of the objectiveLensDiameter property.
     * 
     * @param value
     *     allowed object is
     *     {@link LengthDimension }
     *     
     */
    public void setObjectiveLensDiameter(LengthDimension value) {
        this.objectiveLensDiameter = value;
    }

    /**
     * Gets the value of the exitPupilDiameter property.
     * 
     * @return
     *     possible object is
     *     {@link LengthDimension }
     *     
     */
    public LengthDimension getExitPupilDiameter() {
        return exitPupilDiameter;
    }

    /**
     * Sets the value of the exitPupilDiameter property.
     * 
     * @param value
     *     allowed object is
     *     {@link LengthDimension }
     *     
     */
    public void setExitPupilDiameter(LengthDimension value) {
        this.exitPupilDiameter = value;
    }

    /**
     * Gets the value of the fieldOfView property.
     * 
     * @return
     *     possible object is
     *     {@link LengthDimension }
     *     
     */
    public LengthDimension getFieldOfView() {
        return fieldOfView;
    }

    /**
     * Sets the value of the fieldOfView property.
     * 
     * @param value
     *     allowed object is
     *     {@link LengthDimension }
     *     
     */
    public void setFieldOfView(LengthDimension value) {
        this.fieldOfView = value;
    }

    /**
     * Gets the value of the apparentAngleOfView property.
     * 
     * @return
     *     possible object is
     *     {@link DegreeDimension }
     *     
     */
    public DegreeDimension getApparentAngleOfView() {
        return apparentAngleOfView;
    }

    /**
     * Sets the value of the apparentAngleOfView property.
     * 
     * @param value
     *     allowed object is
     *     {@link DegreeDimension }
     *     
     */
    public void setApparentAngleOfView(DegreeDimension value) {
        this.apparentAngleOfView = value;
    }

    /**
     * Gets the value of the realAngleOfView property.
     * 
     * @return
     *     possible object is
     *     {@link DegreeDimension }
     *     
     */
    public DegreeDimension getRealAngleOfView() {
        return realAngleOfView;
    }

    /**
     * Sets the value of the realAngleOfView property.
     * 
     * @param value
     *     allowed object is
     *     {@link DegreeDimension }
     *     
     */
    public void setRealAngleOfView(DegreeDimension value) {
        this.realAngleOfView = value;
    }

    /**
     * Gets the value of the eyeRelief property.
     * 
     * @return
     *     possible object is
     *     {@link LengthDimension }
     *     
     */
    public LengthDimension getEyeRelief() {
        return eyeRelief;
    }

    /**
     * Sets the value of the eyeRelief property.
     * 
     * @param value
     *     allowed object is
     *     {@link LengthDimension }
     *     
     */
    public void setEyeRelief(LengthDimension value) {
        this.eyeRelief = value;
    }

    /**
     * Gets the value of the diopterAdjustmentRange property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDiopterAdjustmentRange() {
        return diopterAdjustmentRange;
    }

    /**
     * Sets the value of the diopterAdjustmentRange property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDiopterAdjustmentRange(String value) {
        this.diopterAdjustmentRange = value;
    }

    /**
     * Gets the value of the coating property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getCoating() {
        return coating;
    }

    /**
     * Sets the value of the coating property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setCoating(String value) {
        this.coating = value;
    }

    /**
     * Gets the value of the eyepieceLensConstruction property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEyepieceLensConstruction() {
        return eyepieceLensConstruction;
    }

    /**
     * Sets the value of the eyepieceLensConstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEyepieceLensConstruction(String value) {
        this.eyepieceLensConstruction = value;
    }

    /**
     * Gets the value of the objectiveLensConstruction property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getObjectiveLensConstruction() {
        return objectiveLensConstruction;
    }

    /**
     * Sets the value of the objectiveLensConstruction property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setObjectiveLensConstruction(String value) {
        this.objectiveLensConstruction = value;
    }

    /**
     * Gets the value of the tripodReady property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isTripodReady() {
        return tripodReady;
    }

    /**
     * Sets the value of the tripodReady property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setTripodReady(Boolean value) {
        this.tripodReady = value;
    }

    /**
     * Gets the value of the features property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the features property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFeatures().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getFeatures() {
        if (features == null) {
            features = new ArrayList<String>();
        }
        return this.features;
    }

    /**
     * Gets the value of the magnification property.
     * 
     * @return
     *     possible object is
     *     {@link ZoomDimension }
     *     
     */
    public ZoomDimension getMagnification() {
        return magnification;
    }

    /**
     * Sets the value of the magnification property.
     * 
     * @param value
     *     allowed object is
     *     {@link ZoomDimension }
     *     
     */
    public void setMagnification(ZoomDimension value) {
        this.magnification = value;
    }

    /**
     * Gets the value of the specificUses property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSpecificUses() {
        return specificUses;
    }

    /**
     * Sets the value of the specificUses property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSpecificUses(String value) {
        this.specificUses = value;
    }

}
