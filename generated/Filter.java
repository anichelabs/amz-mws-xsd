//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.03.21 at 02:19:07 PM PDT 
//


package generated;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="ForUseWith" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="camcorders"/>
 *               &lt;enumeration value="digital-cameras"/>
 *               &lt;enumeration value="film-cameras"/>
 *               &lt;enumeration value="telescopes"/>
 *               &lt;enumeration value="binoculars"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="PackageType" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="single-filter"/>
 *               &lt;enumeration value="filter-sets"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="MountType" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="round"/>
 *               &lt;enumeration value="square"/>
 *               &lt;enumeration value="bayonet"/>
 *               &lt;enumeration value="other"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="ThreadSize" type="{}LengthDimension" minOccurs="0"/>
 *         &lt;element name="DropInSize" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="6-inch-wratten"/>
 *               &lt;enumeration value="cokin-a"/>
 *               &lt;enumeration value="cokin-p"/>
 *               &lt;enumeration value="lee-type"/>
 *               &lt;enumeration value="pro-optic-a"/>
 *               &lt;enumeration value="pro-optic-p"/>
 *               &lt;enumeration value="other"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="BayonetSize" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="b-3"/>
 *               &lt;enumeration value="b-39"/>
 *               &lt;enumeration value="b-50"/>
 *               &lt;enumeration value="b-6"/>
 *               &lt;enumeration value="b-60"/>
 *               &lt;enumeration value="b-70"/>
 *               &lt;enumeration value="b-93"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="FilterType" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="graduated"/>
 *               &lt;enumeration value="black-and-white-contrast"/>
 *               &lt;enumeration value="close-up"/>
 *               &lt;enumeration value="image-softening"/>
 *               &lt;enumeration value="neutral-density"/>
 *               &lt;enumeration value="general-polarizer"/>
 *               &lt;enumeration value="circular-polarizer"/>
 *               &lt;enumeration value="linear-polarizer"/>
 *               &lt;enumeration value="underwater"/>
 *               &lt;enumeration value="uv-and-protective"/>
 *               &lt;enumeration value="viewing-filters"/>
 *               &lt;enumeration value="lighting-and-compensation"/>
 *               &lt;enumeration value="cooling"/>
 *               &lt;enumeration value="flourescent"/>
 *               &lt;enumeration value="indoor"/>
 *               &lt;enumeration value="outdoor"/>
 *               &lt;enumeration value="warming"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="FilterColor" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="blue"/>
 *               &lt;enumeration value="brown"/>
 *               &lt;enumeration value="cyan"/>
 *               &lt;enumeration value="green"/>
 *               &lt;enumeration value="magenta"/>
 *               &lt;enumeration value="orange"/>
 *               &lt;enumeration value="red"/>
 *               &lt;enumeration value="red-orange"/>
 *               &lt;enumeration value="violet"/>
 *               &lt;enumeration value="yellow"/>
 *               &lt;enumeration value="yellow-green"/>
 *               &lt;enumeration value="yellow-orange"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="SpecialEffect" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="center-spot"/>
 *               &lt;enumeration value="cross-screen"/>
 *               &lt;enumeration value="diffraction"/>
 *               &lt;enumeration value="double-exposure"/>
 *               &lt;enumeration value="enhancing"/>
 *               &lt;enumeration value="fog"/>
 *               &lt;enumeration value="hot-mirror"/>
 *               &lt;enumeration value="infrared"/>
 *               &lt;enumeration value="masks"/>
 *               &lt;enumeration value="multi-image"/>
 *               &lt;enumeration value="prism"/>
 *               &lt;enumeration value="sepia"/>
 *               &lt;enumeration value="special-contrast"/>
 *               &lt;enumeration value="speed"/>
 *               &lt;enumeration value="split-field"/>
 *               &lt;enumeration value="star-filters"/>
 *               &lt;enumeration value="other"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *         &lt;element name="SpecificUses" minOccurs="0">
 *           &lt;simpleType>
 *             &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *               &lt;enumeration value="travel"/>
 *               &lt;enumeration value="hiking-and-outdoors"/>
 *               &lt;enumeration value="hunting-and-shooting"/>
 *               &lt;enumeration value="sports"/>
 *             &lt;/restriction>
 *           &lt;/simpleType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "forUseWith",
    "packageType",
    "mountType",
    "threadSize",
    "dropInSize",
    "bayonetSize",
    "filterType",
    "filterColor",
    "specialEffect",
    "specificUses"
})
@XmlRootElement(name = "Filter")
public class Filter {

    @XmlElement(name = "ForUseWith")
    protected String forUseWith;
    @XmlElement(name = "PackageType")
    protected String packageType;
    @XmlElement(name = "MountType")
    protected String mountType;
    @XmlElement(name = "ThreadSize")
    protected LengthDimension threadSize;
    @XmlElement(name = "DropInSize")
    protected String dropInSize;
    @XmlElement(name = "BayonetSize")
    protected String bayonetSize;
    @XmlElement(name = "FilterType")
    protected String filterType;
    @XmlElement(name = "FilterColor")
    protected String filterColor;
    @XmlElement(name = "SpecialEffect")
    protected String specialEffect;
    @XmlElement(name = "SpecificUses")
    protected String specificUses;

    /**
     * Gets the value of the forUseWith property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getForUseWith() {
        return forUseWith;
    }

    /**
     * Sets the value of the forUseWith property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setForUseWith(String value) {
        this.forUseWith = value;
    }

    /**
     * Gets the value of the packageType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPackageType() {
        return packageType;
    }

    /**
     * Sets the value of the packageType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPackageType(String value) {
        this.packageType = value;
    }

    /**
     * Gets the value of the mountType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMountType() {
        return mountType;
    }

    /**
     * Sets the value of the mountType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMountType(String value) {
        this.mountType = value;
    }

    /**
     * Gets the value of the threadSize property.
     * 
     * @return
     *     possible object is
     *     {@link LengthDimension }
     *     
     */
    public LengthDimension getThreadSize() {
        return threadSize;
    }

    /**
     * Sets the value of the threadSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link LengthDimension }
     *     
     */
    public void setThreadSize(LengthDimension value) {
        this.threadSize = value;
    }

    /**
     * Gets the value of the dropInSize property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDropInSize() {
        return dropInSize;
    }

    /**
     * Sets the value of the dropInSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDropInSize(String value) {
        this.dropInSize = value;
    }

    /**
     * Gets the value of the bayonetSize property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getBayonetSize() {
        return bayonetSize;
    }

    /**
     * Sets the value of the bayonetSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setBayonetSize(String value) {
        this.bayonetSize = value;
    }

    /**
     * Gets the value of the filterType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFilterType() {
        return filterType;
    }

    /**
     * Sets the value of the filterType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFilterType(String value) {
        this.filterType = value;
    }

    /**
     * Gets the value of the filterColor property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFilterColor() {
        return filterColor;
    }

    /**
     * Sets the value of the filterColor property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFilterColor(String value) {
        this.filterColor = value;
    }

    /**
     * Gets the value of the specialEffect property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSpecialEffect() {
        return specialEffect;
    }

    /**
     * Sets the value of the specialEffect property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSpecialEffect(String value) {
        this.specialEffect = value;
    }

    /**
     * Gets the value of the specificUses property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSpecificUses() {
        return specificUses;
    }

    /**
     * Sets the value of the specificUses property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSpecificUses(String value) {
        this.specificUses = value;
    }

}
